@using System.Text
@model WmObject

@{
    ViewData["Title"] = "Details";
}

<canvas id="lineChart"></canvas>

<script type="text/javascript">
    function decodeFloat(bytes, signBits, exponentBits, fractionBits, eMin, eMax, littleEndian) {
        var totalBits = (signBits + exponentBits + fractionBits);

        var binary = "";
        for (var i = 0, l = bytes.length; i < l; i++) {
            var bits = bytes[i].toString(2);
            while (bits.length < 8)
                bits = "0" + bits;

            if (littleEndian)
                binary = bits + binary;
            else
                binary += bits;
        }

        var sign = (binary.charAt(0) == '1') ? -1 : 1;
        var exponent = parseInt(binary.substr(signBits, exponentBits), 2) - eMax;
        var significandBase = binary.substr(signBits + exponentBits, fractionBits);
        var significandBin = '1' + significandBase;
        var i = 0;
        var val = 1;
        var significand = 0;

        if (exponent == -eMax) {
            if (significandBase.indexOf('1') == -1)
                return 0;
            else {
                exponent = eMin;
                significandBin = '0' + significandBase;
            }
        }

        while (i < significandBin.length) {
            significand += val * parseInt(significandBin.charAt(i));
            val = val / 2;
            i++;
        }

        return sign * significand * Math.pow(2, exponent);
    }

    function readInt(array) {
        var value = 0;
        for (var i = 0; i < array.length; i++) {
            value = (value * 256) + array[i];
        }
        return value;
    }


    function _base64ToArrayBuffer(base64) {
        var binary_string = window.atob(base64);
        var len = binary_string.length;
        var bytes = new Uint8Array(len);
        for (var i = 0; i < len; i++) {
            bytes[i] = binary_string.charCodeAt(i);
        }
        return bytes;
    }

    let distance = [];
    let humidity = [];
    let temperatureCelsius = [];


    var arr = JSON.parse('@Html.Raw(Json.Serialize(@Model.WmRecords.Select(r => new { r.Data, r.CreatedAt }).ToArray()))');

    for (let i = 30; i < arr.length; i++) {
        let j = 14;

        let byteArr = _base64ToArrayBuffer(arr[i].data);
        let numOfValues = byteArr[j++];

        for (let k = 0; k < numOfValues; k++) {
            let valueArr = [];

            switch (byteArr[j]) {
                case 1:
                    j++;

                    for (let l = j; l < j + 8; l++) {
                        valueArr.push(byteArr[l]);
                    }

                    distance.push(decodeFloat(valueArr, 1, 11, 52, -1022, 1023, true));

                    j = j + 8;

                    break;

                case 2:
                    j++;

                    for (let l = j; l < j + 8; l++) {
                        valueArr.push(byteArr[l]);
                    }

                    humidity.push(decodeFloat(valueArr, 1, 11, 52, -1022, 1023, true));

                    j = j + 8;

                    break;

                case 3:
                    j++;

                    for (let l = j; l < j + 8; l++) {
                        valueArr.push(byteArr[l]);
                    }

                    temperatureCelsius.push(decodeFloat(valueArr, 1, 11, 52, -1022, 1023, true));

                    j = j + 8;

                    break;

                default:
                    break;
            }
        }
    }

let createdArr = [];

    for (let i = 30; i < arr.length; i++) {
        createdArr.push(arr[i].createdAt)
    }

    //line
    var ctxL = document.getElementById("lineChart").getContext('2d');
    var myLineChart = new Chart(ctxL, {
        type: 'line',
        data: {
            labels: createdArr,
            datasets: [{
                label: "My First dataset",
                data: temperatureCelsius,
                backgroundColor: [
                    'rgba(105, 0, 132, .2)',
                ],
                borderColor: [
                    'rgba(200, 99, 132, .7)',
                ],
                borderWidth: 2
            },
            {
                label: "My Second dataset",
                data: humidity,
                backgroundColor: [
                    'rgba(0, 137, 132, .2)',
                ],
                borderColor: [
                    'rgba(0, 10, 130, .7)',
                ],
                borderWidth: 2
            }
            ]
        },
        options: {
            responsive: true
        }
    });
</script>